KMD
00000000: EA000009    ; B main
00000004:             ; 
00000004:             ; strchr
00000004: E3E00000    ;                 MOV R0, #-1     ; initialise position index
00000008: E3A04000    ;                 MOV R4, #0      ; initialise index counter
0000000C: E7D13004    ; load            LDRB R3, [R1,R4]
00000010: E1530002    ;                 CMP R3, R2
00000014: 01A00004    ;                 MOVEQ R0, R4
00000018: 01A0F00E    ;                 MOVEQ PC, LR                
0000001C: E3530000    ;                 CMP R3, #0
00000020: 12844001    ;                 ADDNE R4, R4, #1
00000024: 1AFFFFF8    ;                 BNE load
00000028: E1A0F00E    ;                 MOV PC, LR
0000002C:             ; ; end of strchr
0000002C:             ; 
0000002C:             ; main
0000002C: E28F5028    ;                 ADR R5, plain
00000030: E28F1059    ;                 ADR R1, cipher    
00000034: EF000001    ; again           SWI 1                   ; get char into R0
00000038: E350000A    ;                 CMP R0, #10             ; is it a newline?
0000003C: 0F000002    ;                 SWIEQ 2
00000040: E1A02000    ;                 MOV R2, R0
00000044: EBFFFFEE    ;                 BL strchr
00000048: E3700001    ;                 CMP R0, #-1    ; if -1 returned then use original char in R2 else use R0 to ind
                      ; ex plain
0000004C: 01A00002    ;                 MOVEQ R0, R2
00000050: 17D50000    ;                 LDRNEB R0, [R5,R0]  ; else use index to get corresponding plaintext char
00000054: EF000000    ;                 SWI  0              ; put out character in R0
00000058: EAFFFFF5    ;                 B again
0000005C:             ; 
0000005C: 61 62 63 64 ; plain  DEFB "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\0"
00000060: 65 66 67 68 ; 
00000064: 69 6A 6B 6C ; 
00000068: 6D 6E 6F 70 ; 
0000006C: 71 72 73 74 ; 
00000070: 75 76 77 78 ; 
00000074: 79 7A 41 42 ; 
00000078: 43 44 45 46 ; 
0000007C: 47 48 49 4A ; 
00000080: 4B 4C 4D 4E ; 
00000084: 4F 50 51 52 ; 
00000088: 53 54 55 56 ; 
0000008C: 57 58 59 5A ; 
00000090: 00          ; 
00000091: 74 75 4A 4B ; cipher DEFB "tuJKjkNOehSTWXYZabABcdiUVnopqLMxyzvwClmDEFfgGHIrsPQR\0"
00000095: 6A 6B 4E 4F ; 
00000099: 65 68 53 54 ; 
0000009D: 57 58 59 5A ; 
000000A1: 61 62 41 42 ; 
000000A5: 63 64 69 55 ; 
000000A9: 56 6E 6F 70 ; 
000000AD: 71 4C 4D 78 ; 
000000B1: 79 7A 76 77 ; 
000000B5: 43 6C 6D 44 ; 
000000B9: 45 46 66 67 ; 
000000BD: 47 48 49 72 ; 
000000C1: 73 50 51 52 ; 
000000C5: 00          ; 
000000C6:             ; 

Symbol Table: Labels
: strchr                            00000004  Local -- ARM
: load                              0000000C  Local -- ARM
: main                              0000002C  Local -- ARM
: again                             00000034  Local -- ARM
: plain                             0000005C  Local -- ARM
: cipher                            00000091  Local -- ARM
