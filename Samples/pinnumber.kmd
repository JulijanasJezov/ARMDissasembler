KMD
00000000:             ; stack EQU       0x1000
00000000: EA00000D    ; B main
00000004:             ; strchr  
00000004: E3E00000    ;                 MOV R0, #-1     ; initialise position index
00000008: E3A04000    ;                 MOV R4, #0      ; initialise index counter
0000000C: E7D13004    ; load            LDRB R3, [R1,R4]
00000010: E1530002    ;                 CMP R3, R2
00000014: 01A00004    ;                 MOVEQ R0, R4
00000018: 01A0F00E    ;                 MOVEQ PC, LR                
0000001C: E3530000    ;                 CMP R3, #0
00000020: 12844001    ;                 ADDNE R4, R4, #1
00000024: 1AFFFFF8    ;                 BNE load
00000028: E1A0F00E    ;                 MOV PC, LR
0000002C:             ; ; end of strchr. This is a leaf function but R4 is used so take care
0000002C:             ; 
0000002C:             ; func1
0000002C: E92D41F0    ;                 STMFD SP!, {R4-R8, LR}
00000030:             ;                         ; strchr trashes R4 and lots of stuff to be added here 
00000030:             ;                         ; later that may well trash R5-R8 which APCS says we must save
00000030:             ;                         ; now get ready to call strchr 
00000030:             ;                         ; R1-3 untouched so should be OK
00000030: EBFFFFF3    ;                 BL strchr
00000034: E0800005    ;                 ADD R0, R0, R5
00000038: E8BD81F0    ;                 LDMFD SP!, {R4-R8,PC}   ; restore R4-R8 and return result in R0
0000003C:             ; 
0000003C:             ; 
0000003C:             ; main
0000003C: E28F005D    ;                 ADR R0, mesg2    
00000040: EF000003    ;                 SWI 3
00000044: EF000001    ;                 SWI 1           ; get the character from keyboard
00000048: E1A02000    ;                 MOV R2, R0      ;seed char now in R2
0000004C: E28F1018    ;                 ADR R1, mesg1
00000050: E28F0065    ;                 ADR R0, mesg3
00000054: EF000003    ;                 SWI 3           ; your pin number is
00000058: E59F5078    ;                 LDR R5, =2010
0000005C: E3A0DA01    ;                 MOV SP, #stack  
00000060: EBFFFFF1    ;                 BL func1
00000064: EF000004    ;                 SWI 4
00000068: EF000002    ;                 SWI 2
0000006C:             ; 
0000006C: 74 75 4A 4B ; mesg1 DEFB      "tuJKjkNOehSTWXYZabABcdiUVnopqLMxyzvwClmDEFfgGHIrsPQR\0"
00000070: 6A 6B 4E 4F ; 
00000074: 65 68 53 54 ; 
00000078: 57 58 59 5A ; 
0000007C: 61 62 41 42 ; 
00000080: 63 64 69 55 ; 
00000084: 56 6E 6F 70 ; 
00000088: 71 4C 4D 78 ; 
0000008C: 79 7A 76 77 ; 
00000090: 43 6C 6D 44 ; 
00000094: 45 46 66 67 ; 
00000098: 47 48 49 72 ; 
0000009C: 73 50 51 52 ; 
000000A0: 00          ; 
000000A1: 4B 65 79 20 ; mesg2 DEFB      "Key in a single character: \0"
000000A5: 69 6E 20 61 ; 
000000A9: 20 73 69 6E ; 
000000AD: 67 6C 65 20 ; 
000000B1: 63 68 61 72 ; 
000000B5: 61 63 74 65 ; 
000000B9: 72 3A 20 00 ; 
000000BD: 0A 4F 4B 20 ; mesg3 DEFB      "\nOK your pin number is: \0"
000000C1: 79 6F 75 72 ; 
000000C5: 20 70 69 6E ; 
000000C9: 20 6E 75 6D ; 
000000CD: 62 65 72 20 ; 
000000D1: 69 73 3A 20 ; 
000000D5: 00          ; 
000000D8:             ; ALIGN
000000D8:             ; 
000000D8:             ; 
000000D8: 000007DA    ; Remaining literals

Symbol Table: Labels
: stack                             00001000  Value
: strchr                            00000004  Local -- ARM
: load                              0000000C  Local -- ARM
: func1                             0000002C  Local -- ARM
: main                              0000003C  Local -- ARM
: mesg1                             0000006C  Local -- ARM
: mesg2                             000000A1  Local -- ARM
: mesg3                             000000BD  Local -- ARM
